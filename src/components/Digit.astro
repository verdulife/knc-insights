---
interface Props {
  number: string;
}

const { number } = Astro.props;
const [...digits] = number;
---

{
  digits.map((digit) =>
    digit === "." ? (
      <span class="active digit h-[10px] w-[10px] rounded-sm bg-slate-900 shadow-inner shadow-slate-950 transition" />
    ) : (
      <div
        data-digit={digit}
        class="digit relative h-[100px] w-[100px] [&>span]:rounded-sm [&>span]:shadow-inner [&>span]:shadow-slate-950 [&>span]:transition"
      >
        <span class="absolute left-[10%] top-0 h-[10%] w-[80%] bg-slate-900" />
        <span class="absolute left-0 top-[10%] h-[35%] w-[10%] bg-slate-900" />
        <span class="absolute right-0 top-[10%] h-[35%] w-[10%] bg-slate-900" />
        <span class="absolute left-[10%] top-[45%] h-[10%] w-[80%] bg-slate-900" />
        <span class="absolute bottom-[10%] left-0 h-[35%] w-[10%] bg-slate-900" />
        <span class="absolute bottom-[10%] right-0 h-[35%] w-[10%] bg-slate-900" />
        <span class="absolute bottom-0 left-[10%] h-[10%] w-[80%] bg-slate-900" />
      </div>
    ),
  )
}

<style>
  .active {
    --color: red;
    background-color: var(--color);
    box-shadow: 0 0 10px 0 var(--color);
  }
</style>

<script>
  const digits = document.querySelectorAll(".digit");
  const digit_lib = [
    [0, 1, 2, 4, 5, 6],
    [2, 5],
    [0, 2, 3, 4, 6],
    [0, 2, 3, 5, 6],
    [1, 2, 3, 5],
    [0, 1, 3, 5, 6],
    [0, 1, 3, 4, 5, 6],
    [0, 2, 5],
    [0, 1, 2, 3, 4, 5, 6],
    [0, 1, 2, 3, 5],
  ];

  digits.forEach((digit) => {
    const parts = digit.querySelectorAll("span");
    const dataDigit = digit.getAttribute("data-digit");

    if (dataDigit === ".") return;

    const value = dataDigit ? +dataDigit : 0;

    parts.forEach((part, i) => {
      if (digit_lib[value].includes(i)) part.classList.add("active");
    });
  });
</script>
